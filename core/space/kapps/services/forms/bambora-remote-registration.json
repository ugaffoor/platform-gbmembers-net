{
  "anonymous": true,
  "attributes": [
    {
      "name": "Cancel Disabled",
      "values": [
        "true"
      ]
    },
    {
      "name": "Cloning Disabled",
      "values": [
        "true"
      ]
    },
    {
      "name": "Comment Disabled",
      "values": [
        "true"
      ]
    },
    {
      "name": "Submission Workflow",
      "values": [
        "Submitted - True"
      ]
    }
  ],
  "bridgedResources": [
    {
      "model": "Migration Submission",
      "name": "Get Bambora Migration",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "${values('Migration ID')}",
          "name": "ID"
        }
      ],
      "qualification": "Get Migration Record",
      "status": "Active"
    },
    {
      "model": "Terms and Conditions",
      "name": "Get Bambora Terms and Conditions",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "Bambora Terms and Conditions",
          "name": "Type"
        }
      ],
      "qualification": "Paysmart Member Registration",
      "status": "Active"
    },
    {
      "model": "Members",
      "name": "Get Family Member",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "${values('Family Member')}",
          "name": "ID"
        }
      ],
      "qualification": "Get Member",
      "status": "Active"
    },
    {
      "model": "Members",
      "name": "Get Member",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "${values('Member GUID')}",
          "name": "ID"
        }
      ],
      "qualification": "Get Member",
      "status": "Active"
    },
    {
      "model": "Members",
      "name": "Get Member by Username",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "${identity('username')}",
          "name": "username"
        }
      ],
      "qualification": "Get Member by Username",
      "status": "Active"
    },
    {
      "model": "Program Fees",
      "name": "Get Program",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "${values('Programs')}",
          "name": "ID"
        }
      ],
      "qualification": "By ID",
      "status": "Active"
    },
    {
      "model": "Terms and Conditions",
      "name": "Get Terms and Conditions",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "Bambora Member Registration",
          "name": "Type"
        }
      ],
      "qualification": "Paysmart Member Registration",
      "status": "Active"
    },
    {
      "model": "Terms and Conditions",
      "name": "Get Waiver",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "Gracie Barra Waiver",
          "name": "Type"
        }
      ],
      "qualification": "Paysmart Member Registration",
      "status": "Active"
    },
    {
      "model": "Members",
      "name": "Members",
      "order": [

      ],
      "parameters": [

      ],
      "qualification": "Active Members",
      "status": "Active"
    },
    {
      "model": "Program Fees",
      "name": "Program Fees",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "${values('Payment Frequency')}",
          "name": "Frequency"
        }
      ],
      "qualification": "By Frequency",
      "status": "Active"
    }
  ],
  "categorizations": [

  ],
  "customHeadContent": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0\" />\n<script src='https://libs.na.bambora.com/customcheckout/1/customcheckout.js'></script>\n<script src=\"https://code.jquery.com/ui/1.14.1/jquery-ui.js\"></script>\n<link rel=\"stylesheet\" href=\"https://code.jquery.com/ui/1.14.1/themes/base/jquery-ui.css\">\n<link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.12.1/css/all.css\" crossorigin=\"anonymous\">\n\n<style>\n.page-panel {\n\tpadding: unset;   \n}\nimg.GBLogo {\n  @media (max-width: 600px) {    \n  \twidth: 100%;\n  }\n}\n.services-paysmart-billing-details {\n\twidth: 400px;  \n}\n.bambora-checkoutfield {\n  @media (max-width: 600px) {    \n  \tbackground-position: calc(100% + 0px) center !important;\n    padding-right: 30px !important;\n    margin: unset !important;\n  }\n}\n.services-paysmart-billing-details {\n  @media (max-width: 600px) {    \n    width: 320px;\n  }\n}  \n#feedback {\n  @media (max-width: 600px) {    \n    left: 0px !important;\n  }  \n}\n.review_true {\n\tdisplay: none;  \n}\n.discountEdit {\n\tmargin-left: 10px;\n  cursor: pointer;\n}\ninput.percent {\n    width: 80px;\n}  \nb {\n  word-break: break-all;\n  text-size-adjust: unset;\n  }\n.errorDetails {\n    background-color: red;\n    border-radius: 5px;\n    margin: 5px;\n}  \n.card-container {\n    background-color: rgb(240, 240, 240);\n    margin: auto;\n    width: calc(95%);\n\n    border: none;\n    border-radius: 4px;\n}\n.form-group {\n    flex: 0 0 auto;\n    flex-flow: column !important;\n}\n#checkout-form {\n    position: relative;\n    width: 400px;\n    padding: 10px;\n}\n\n#checkout-form label {\n    display: block;\n    min-height: 25px;\n\n    font-size: 15px;\n    font-weight: 500;\n    margin: 5px 0;\n    padding: 0;\n    color: red;\n}\n\n#card-number, #card-cvv, #card-expiry {\n    background-color: #FFF;\n    display: block;\n    width: calc(90%);\n    border-radius: 2px;\n    border: 1px solid rgba(200, 200, 200, 1);\n    padding: 14px 60px 13px 20px;\n    margin: auto;\n    transition: all 100ms ease-out;\n}\n\n/* card images are added to card number */\n#card-number {\n    background-image: none;\n\n    background-origin: content-box;\n    background-position: calc(100% + 40px) center;\n    background-repeat: no-repeat;\n    background-size: contain;\n}\n\n/* buttons */\n.btn {\n    vertical-align: top;\n}\n\n#pay-button {\n    position: relative;\n    border: none;\n    border-radius: 4px;\n    background-color: #0c384f;\n    color: rgba(255, 255, 255, 1);\n    display: inline-block;\n    transition: all 100ms ease-out;\n    padding: 11px 25px;\n    margin-left: 30px;\n}\n\n#pay-button:hover, #pay-button:active {\n    background-color: rgba(69, 36, 89, 1);\n}\n\n#pay-button:active {\n    box-shadow: inset 0 0 35px rgba(0, 0, 0, 0.3);\n}\n\n#pay-button:disabled {\n    background-color: rgba(255, 255, 255, 1);\n    border: 1px solid #0c384f;\n    color: #0c384f;\n}\n\n/* feedback is displayed after tokenization */\n#feedback {\n    position: relative;\n    left: 15px;\n    display: inline-block;\n    background-color: transparent;\n    border: 0px solid rgba(200, 200, 200, 1);\n    border-radius: 4px;\n    transition: all 100ms ease-out;\n    padding: 11px;\n}\n\n#feedback.error {\n    color: red;\n    border: 1px solid;\n}\n\n#feedback.success {\n    color: seagreen;\n    border: 1px solid;\n}\n</style>\n<style>\n\t.acceptTerms + label {\n    margin-left: 20px !important;\n\t}  \n  .hidden{\n   display:none; \n  }\nbody a {\n    color: #003b72;\n}  \nbutton.editButton {\n    border-radius: .25rem;\n    line-height: 1.0rem;\n    padding: .2rem 0.8rem;\n    margin-right: .5rem;\n    border: none;\n    color: #fff;\n    font-size: .75rem;\n    background-color: #0c384f;\n}\n</style>\n<script>\nfunction enabledAddressEdit(){\n  K('field[Address]').enable();\n  K('field[Suburb]').enable();\n  K('field[State]').enable();\n  K('field[Postcode]').enable();\n}\nfunction geolocate() {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(function(position) {\n      var geolocation = {\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      };\n      var circle = new google.maps.Circle(\n          {center: geolocation, radius: position.coords.accuracy});\n      autocomplete.setBounds(circle.getBounds());\n    });\n  }\n}\nfunction fillInAddress() {\n  K(\"field[Address]\").value(\"\");\n\n  // Get the place details from the autocomplete object.\n  var place = autocomplete.getPlace();\n\ndebugger;\n  // Get each component of the address from the place details,\n  // and then fill-in the corresponding field on the form.\n  for (var i = 0; i < place.address_components.length; i++) {\n    var addressType = place.address_components[i].types[0];\n\n    if (addressType===\"street_number\") {\n    \tK(\"field[Address]\").value(place.address_components[i][\"long_name\"]);\n    }\n    if (addressType===\"route\") {\n    \tK(\"field[Address]\").value(K(\"field[Address]\").value()+\" \"+place.address_components[i][\"long_name\"]);\n    }\n    if (addressType===\"locality\") {\n    \tK(\"field[Suburb]\").value(place.address_components[i][\"long_name\"]);\n    }\n    if (addressType===\"administrative_area_level_1\") {\n    \tK(\"field[State]\").value(place.address_components[i][\"short_name\"]);\n    }\n    if (addressType===\"postal_code\") {\n    \tK(\"field[Postcode]\").value(place.address_components[i][\"short_name\"]);\n    }\n/*    if (addressType===\"country\") {\n    \tK(\"field[Country]\").value(place.address_components[i][\"long_name\"]);\n    } */\n  }\n}  \nfunction initAutocomplete() {\n  debugger;\n  if (document.getElementById('autocomplete')!==undefined) {\n    // Create the autocomplete object, restricting the search predictions to\n    // geographical location types.\n    try {\n      if (document.getElementById('autocomplete')!==null) {\n\t      autocomplete = new google.maps.places.Autocomplete(\n          document.getElementById('autocomplete'), {types: ['geocode']});\n\n  \t    // Avoid paying for data that you don't need by restricting the set of\n    \t  // place fields that are returned to just the address components.\n      \tautocomplete.setFields(['address_component']);\n\n      \t// When the user selects an address from the drop-down, populate the\n      \t// address fields in the form.\n      \tautocomplete.addListener('place_changed', fillInAddress);\n      }\n    } catch (e) {\n    \tconsole.log(\"Error handling autocompete\");\n    }\n  }\n}  \n</script>\n<script src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyA-tujnpf8Jy33hVaJ_9GtRdMgHw4jvnwo&libraries=places&callback=initAutocomplete\"\n        async defer>\n</script>",
  "description": "Member payment registration form for first-time enrollment. Used to initiate a scheduled payment for a new member.",
  "name": "Bambora Remote Registration",
  "notes": null,
  "pages": [
    {
      "advanceCondition": null,
      "displayCondition": null,
      "displayPage": null,
      "elements": [
        {
          "type": "content",
          "renderType": "html",
          "name": "GBLogo",
          "text": "<img src=\"https://gbfms-files.s3-ap-southeast-2.amazonaws.com/GB+Name+Log.png\" alt=\"GB Logo\" class=\"GBLogo\">",
          "visible": "values('PD Submitting')!==\"YES\"",
          "renderAttributes": {
          }
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Student Information",
          "title": "",
          "visible": false,
          "omitWhenHidden": true,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "field",
              "name": "Migration ID",
              "label": "Migration ID",
              "key": "f87",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Get Migration Details",
                  "type": "Change",
                  "action": "Custom",
                  "code": "K('bridgedResource[Get Bambora Migration]').load({\n  success: function(bridgedData) {\n debugger;   \n    if (bridgedData===null) return;    \n    K('field[Member GUID]').value(bridgedData['Member GUID']);\n    K('field[Member ID]').value(bridgedData['Member ID']);\n    K('field[Student First Name]').value(bridgedData['First Name']);\n    K('field[Student Last Name]').value(bridgedData['Last Name']);\n    K('field[DOB]').value(bridgedData['DOB']);\n    K('field[Address]').value(bridgedData['Address']);\n    K('field[Admin Fee]').value(bridgedData['Admin Fee']);\n    K('field[Country]').value(bridgedData['Country']);\n    K('field[Email]').value(bridgedData['Email']);\n    K('field[Fee Total]').value(bridgedData['Fee Total']);\n    K('field[feesJSON]').value(bridgedData['feesJSON']);\n    K('field[I promise to pay equal FREQUENCY instalments of]').value(bridgedData['I promise to pay equal FREQUENCY instalments of']);\n    K('field[Include Family Members]').value(bridgedData['Include Family Members']);\n    K('field[membersJSON]').value(bridgedData['membersJSON']);\n    K('field[Mobile]').value(bridgedData['Mobile']);\n    K('field[Payment Frequency]').value(bridgedData['Payment Frequency']);\n    K('field[Postcode]').value(bridgedData['Postcode']);\n    K('field[Requested For]').value(bridgedData['Requested For']);\n    K('field[State]').value(bridgedData['StatePlaceholder']);\n    K('field[Suburb]').value(bridgedData['Suburb']);\n    K('field[TAX 1]').value(bridgedData['TAX 1']);\n    K('field[TAX 2]').value(bridgedData['TAX 2']);\n    K('field[TAX 3]').value(bridgedData['TAX 3']);\n    K('field[The first instalment is due on]').value(bridgedData['The first instalment is due on']);\n\n    if (bridgedData['coreState']===\"Submitted\") {\n        K('section[Completed Request]').show();      \t    \n        K('section[Program Information]').hide();      \n        K('section[Accept Terms and Conditions]').hide();      \n        K('section[Waiver Section]').hide();      \n        K('section[Billing Member Details]').hide();      \n        K('section[Payment Details]').hide();      \n        K('section[Credit Card Details]').hide();      \n        K('section[Card Error]').hide();      \n        K('section[Signatures]').hide();      \n    } else {\n      bundle.setupMemberTable();\n\n      if (moment(K('field[The first instalment is due on]').value(), \"YYYY-MM-DD\").isSameOrBefore(moment(),\"days\")){\n\n        K('section[Expired Request]').show();      \n        K('section[Program Information]').hide();      \n        K('section[Family Members]').hide();              \n        K('section[Accept Terms and Conditions]').hide();      \n        K('section[Waiver Section]').hide();      \n        K('section[Billing Member Details]').hide();      \n        K('section[Payment Details]').hide();      \n        K('section[Credit Card Details]').hide();      \n        K('section[Card Error]').hide();      \n        K('section[Signatures]').hide();      \n      } else {  \n        K('section[Student Information]').show();\n        K('section[Program Information]').show();\n\n        K('section[Member Select Space]').hide();    \n\n        bundle.discounts=(K('space').attributes('Member Discounts')!==undefined ? JSON.parse(K('space').attributes('Member Discounts')) : []);  \n        setTimeout(function(){\n          bundle.completeTableChange(true);\n          setTimeout(function(){\n            $(\".discountEdit\").removeClass(\"review_false\");\n            $(\".discountEdit\").addClass(\"review_true\");\n          }, 1000);  \n        }, 500);  \n\n        K('field[Payment Method]').value(\"Credit Card\");\n        K('field[Include Family Members]').disable();\n        K('field[Payment Frequency]').disable();\n        K('field[Fee Total]').disable();\n        K('field[Programs]').hide();\n        K('section[Add buttons]').hide();\n        K('field[I promise to pay equal FREQUENCY instalments of]').disable();\n        K('content[The first instalment is due on HTML]').hide();\n        K('field[The first instalment is due on]').show();\n        K('field[The first instalment is due on]').disable();\n        K('field[Fee Total]').disable();\n\n        K('section[Program Information]').show();      \n        K('section[Accept Terms and Conditions]').show();      \n        K('section[Waiver Section]').show();      \n        K('section[Billing Member Details]').show();      \n        K('section[Payment Details]').show();      \n        K('section[Credit Card Details]').show();      \n        K('section[Card Error]').show();      \n        K('section[Signatures]').show();          \n        K('button[Submit]').show();\n      }    \n    }\n  }\n});"
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Member ID",
              "label": "Member ID",
              "key": "f39",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Member GUID",
              "label": "Member GUID",
              "key": "f60",
              "defaultValue": "${resources('Get Member by Username:id')}",
              "defaultResourceName": "Get Member by Username",
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Get Member",
                  "type": "Change",
                  "action": "Custom",
                  "code": "K('bridgedResource[Get Member]').load({\n  attributes: ['Member ID', 'First Name', 'Last Name'],\n  values: {'ID' : 'Allen'},\n  success: function(bridgedData) {\n debugger;   \n    if (bridgedData===null) return;    \n    K('field[Member ID]').value(bridgedData['Member ID']);\n    K('field[Student First Name]').value(bridgedData['First Name']);\n    K('field[Student Last Name]').value(bridgedData['Last Name']);\n    K('field[DOB]').value(bridgedData['DOB']);\n    K('field[Address]').value(bridgedData['Address']);\n    K('field[Suburb]').value(bridgedData['Suburb']);\n    K('field[Postcode]').value(bridgedData['Postcode']);\n    K('field[State]').value(bridgedData['State']);\n    K('field[StatePlaceholder]').value(bridgedData['State']);\n    K('field[Mobile]').value(bridgedData['Phone Number']);\n    K('field[Email]').value(bridgedData['Email']);\n    \n/*    if (K('field[The first instalment is due on]').value()==null || K('field[The first instalment is due on]').value()==\"\") {\n\t    K('field[The first instalment is due on]').value(moment().format(\"YYYY-MM-DD\"));\n    }  */\n    \n  }\n});"
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Messages URL",
              "label": "Messages URL",
              "key": "f101",
              "defaultValue": "https://services.gbmembers.net/gbmembers-messaging",
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Registration Mode",
              "label": null,
              "key": "f102",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Student First Name",
              "label": "Student's First Name",
              "key": "f28",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": false,
              "required": true,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Set Requested For",
                  "type": "Change",
                  "action": "Set Fields",
                  "mappings": [
                    {
                      "field": "Requested For",
                      "value": "${values('Student First Name')} ${values('Student Last Name')}",
                      "visible": null
                    }
                  ]
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Student Last Name",
              "label": "Student's Last Name",
              "key": "f29",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": false,
              "required": true,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Set Requested For",
                  "type": "Change",
                  "action": "Set Fields",
                  "mappings": [
                    {
                      "field": "Requested For",
                      "value": "${values('Student First Name')} ${values('Student Last Name')}",
                      "visible": null
                    }
                  ]
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Requested For",
              "label": "Requested For",
              "key": "f66",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Billing Customer Reference",
              "label": null,
              "key": "f54",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "PD Submitting",
              "label": "PD Submitting",
              "key": "f84",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "section",
              "renderType": null,
              "name": "Family Members",
              "title": "",
              "visible": true,
              "omitWhenHidden": null,
              "renderAttributes": {
              },
              "elements": [
                {
                  "type": "field",
                  "name": "Include Family Members",
                  "label": "Include Family Members",
                  "key": "f44",
                  "defaultValue": "",
                  "defaultResourceName": null,
                  "visible": true,
                  "enabled": true,
                  "required": false,
                  "requiredMessage": null,
                  "omitWhenHidden": null,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "radio",
                  "choicesResourceName": null,
                  "choicesRunIf": null,
                  "choices": [
                    {
                      "label": "Yes",
                      "value": "Yes"
                    },
                    {
                      "label": "No",
                      "value": "No"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Expired Request",
          "title": null,
          "visible": false,
          "omitWhenHidden": true,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "content",
              "renderType": "text",
              "name": "Expired Message",
              "text": "This request has expired.\nPlease contact the school or check the email you responded to was the most recent.",
              "visible": true,
              "renderAttributes": {
              }
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Completed Request",
          "title": null,
          "visible": false,
          "omitWhenHidden": true,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "content",
              "renderType": "text",
              "name": "Completed Message",
              "text": "This request has already been completed Thank you.",
              "visible": true,
              "renderAttributes": {
              }
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Program Information",
          "title": "",
          "visible": "values('Include Family Members')!==null",
          "omitWhenHidden": false,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "field",
              "name": "Payment Frequency",
              "label": "Payment Frequency",
              "key": "f40",
              "defaultValue": "Fortnightly",
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": true,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Set Frequency Label",
                  "type": "Change",
                  "action": "Custom",
                  "code": "value=K('field[I promise to pay equal FREQUENCY instalments of]').name();\nvalue=value.replace(\"FREQUENCY\", K.translate(K('field[Payment Frequency]').value()));\n$(K('field[I promise to pay equal FREQUENCY instalments of]').wrapper()).find(\"label\").html(value);\n\nif (K('field[Payment Frequency]').value()!==null) {\n\t$(\"#paymentType\").html(K.translate(K('field[Payment Frequency]').value()).toLowerCase());\n}",
                  "runIf": ""
                },
                {
                  "name": "Set Fees",
                  "type": "Change",
                  "action": "Custom",
                  "code": "if (K('space').attributes('Ignore Admin Fee')!==\"YES\") {\n\t//K('field[Admin Fee]').value(K('space').attributes('Admin Fee Charge'));\n}",
                  "runIf": "values('Payment Frequency')!==null"
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "radio",
              "choicesResourceName": null,
              "choicesRunIf": null,
              "choices": [
                {
                  "label": "Weekly",
                  "value": "Weekly"
                },
                {
                  "label": "Fortnightly",
                  "value": "Fortnightly"
                },
                {
                  "label": "Monthly",
                  "value": "Monthly"
                },
                {
                  "label": "Quarterly",
                  "value": "Quarterly"
                },
                {
                  "label": "4 Months",
                  "value": "4 Months"
                },
                {
                  "label": "6 Months",
                  "value": "6 Months"
                },
                {
                  "label": "Yearly",
                  "value": "Yearly"
                }
              ]
            },
            {
              "type": "field",
              "name": "Family Member",
              "label": "Family Member",
              "key": "f48",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Get Family Member",
                  "type": "Change",
                  "action": "Set Fields",
                  "mappings": [
                    {
                      "field": "tableMemberName",
                      "value": "${resources('Get Family Member:First Name')} ${resources('Get Family Member:Last Name')}",
                      "visible": true
                    },
                    {
                      "field": "tableMemberID",
                      "value": "${resources('Get Family Member:id')}",
                      "visible": true
                    }
                  ],
                  "bridgedResourceName": "Get Family Member"
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "dropdown",
              "choicesResourceName": "Members",
              "choicesRunIf": null,
              "choices": {
                "label": "${resources('Members:First Name')} ${resources('Members:Last Name')}",
                "value": "${resources('Members:id')}"
              }
            },
            {
              "type": "content",
              "renderType": "html",
              "name": "Discount Dialog",
              "text": "<div id=\"discountDialog\" title=\"Discount Value\">\n  <input class=\"discountPercent\" type='text' value='%' maxlength='6' pattern=\"[0-9]\"/>\n  <button onclick='bundle.applyCurrentDiscount()'>Apply</button>\n</div>",
              "visible": false,
              "renderAttributes": {
              }
            },
            {
              "type": "content",
              "renderType": "html",
              "name": "Family Member Select",
              "text": "<div id=\"selectFamilyMemberMenu\"></div>",
              "visible": "values('Include Family Members')===\"Yes\" && !form('review')",
              "renderAttributes": {
              }
            },
            {
              "type": "field",
              "name": "tableMemberID",
              "label": "tableMemberID",
              "key": "f50",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "tableMemberName",
              "label": "tableMemberName",
              "key": "f49",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Programs",
              "label": "Programs",
              "key": "f45",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": "values('PD Submitting')===\"YES\" && values('Payment Frequency')!==null && !form('review') && K(\"identity\").teams.includes(\"Role::Program Managers\")",
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Get Program",
                  "type": "Change",
                  "action": "Set Fields",
                  "mappings": [
                    {
                      "field": "tableProgram",
                      "value": "${resources('Get Program:Program')} - ${resources('Get Program:Info')}",
                      "visible": true
                    },
                    {
                      "field": "tableFee",
                      "value": "${resources('Get Program:Fee')}",
                      "visible": true
                    },
                    {
                      "field": "tableFeeProgram",
                      "value": "${resources('Get Program:Program')}",
                      "visible": true
                    },
                    {
                      "field": "tableRegistrationFeeVisible",
                      "value": "${resources('Get Program:Registration Fee Include')}",
                      "visible": false
                    },
                    {
                      "field": "tableRegistrationFeeDisplayText",
                      "value": "${resources('Get Program:Display Info Text')}",
                      "visible": false
                    },
                    {
                      "field": "tableRegistrationFeeChargeTiming",
                      "value": "${resources('Get Program:Charge Timing')}",
                      "visible": false
                    },
                    {
                      "field": "tableRegistrationFee",
                      "value": "${resources('Get Program:Registration Fee')}",
                      "visible": false
                    }
                  ],
                  "bridgedResourceName": "Get Program"
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "dropdown",
              "choicesResourceName": "Program Fees",
              "choicesRunIf": "",
              "choices": {
                "label": "${resources('Program Fees:Program')} - ${resources('Program Fees:Info')}",
                "value": "${resources('Program Fees:id')}"
              }
            },
            {
              "type": "field",
              "name": "tableProgram",
              "label": "tableProgram",
              "key": "f47",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "tableFeeProgram",
              "label": "tableFeeProgram",
              "key": "f53",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "tableFee",
              "label": "tableFee",
              "key": "f46",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Set Fee as Individual(Disabled)",
                  "type": "Change",
                  "action": "Set Fields",
                  "mappings": [
                    {
                      "field": "I promise to pay equal FREQUENCY instalments of",
                      "value": "${values('tableFee')}",
                      "visible": null
                    }
                  ],
                  "runIf": "values('Include Family Members')===\"No\" && false"
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "tableRegistrationFeeVisible",
              "label": "tableRegistrationFeeVisible",
              "key": "f91",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Set Registration Fee Visible",
                  "type": "Change",
                  "action": "Custom",
                  "code": "debugger;\nif (K('field[tableRegistrationFeeVisible]').value()!==null && K('field[tableRegistrationFeeVisible]').value()!==\"[]\") {\n  K('field[Registration Fee Visible]').value(K('field[tableRegistrationFeeVisible]').value());\n}"
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "tableRegistrationFeeDisplayText",
              "label": "tableRegistrationFeeDisplayText",
              "key": "f92",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Set Registration Fee Text",
                  "type": "Change",
                  "action": "Custom",
                  "code": "debugger;\nif (K('field[tableRegistrationFeeDisplayText]').value()!==null && bundle.isFamilyWithNoFee()) {\n  $(\"#registrationFeeDisplayText\").html(K('field[tableRegistrationFeeDisplayText]').value());\n  K('field[Registration Fee Display Text]').value(K('field[tableRegistrationFeeDisplayText]').value());\n}"
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "tableRegistrationFeeChargeTiming",
              "label": "tableRegistrationFeeChargeTiming",
              "key": "f93",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Set Charge Timing",
                  "type": "Change",
                  "action": "Custom",
                  "code": "if (K('field[tableRegistrationFeeChargeTiming]').value()!==null && bundle.isFamilyWithNoFee()) { \t\t   \n  K('field[Registration Fee Charge Timing]').value(K('field[tableRegistrationFeeChargeTiming]').value());\n}"
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "tableRegistrationFee",
              "label": "tableRegistrationFee",
              "key": "f94",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "section",
              "renderType": null,
              "name": "Add buttons",
              "title": null,
              "visible": "values('Include Family Members')!==null",
              "omitWhenHidden": true,
              "renderAttributes": {
              },
              "elements": [
                {
                  "type": "button",
                  "label": "Add My Program",
                  "name": "Add Current Member",
                  "visible": true,
                  "enabled": true,
                  "renderType": "custom",
                  "renderAttributes": {
                  },
                  "events": [
                    {
                      "name": "Set Current Member",
                      "type": "Click",
                      "action": "Custom",
                      "code": "K('field[tableMemberID]').value(K('field[Member GUID]').value());\nK('field[tableMemberName]').value(K('field[Student First Name]').value()+\" \"+K('field[Student Last Name]').value());\nDataViewer.renderFieldValues($('#memberTableDiv'), global.viewerConfig);\nbundle.completeTableChange();",
                      "runIf": "values('tableProgram')!=null && values('tableFee')!=null && !bundle.memberProgramAdded(values('Member GUID'),values('tableFeeProgram'))"
                    }
                  ]
                },
                {
                  "type": "button",
                  "label": "Add Family Member Program",
                  "name": "Add Family Member Program",
                  "visible": "values('Include Family Members')===\"Yes\"",
                  "enabled": true,
                  "renderType": "custom",
                  "renderAttributes": {
                  },
                  "events": [
                    {
                      "name": "Add Family Member",
                      "type": "Click",
                      "action": "Custom",
                      "code": "DataViewer.renderFieldValues($('#memberTableDiv'), global.viewerConfig);\nbundle.completeTableChange();\n",
                      "runIf": "K('field[Family Member]').value()!==null && values('tableProgram')!=null && values('tableFee')!=null && !bundle.memberProgramAdded(K('field[tableMemberID]').value(),K('field[tableFeeProgram]').value())"
                    }
                  ]
                },
                {
                  "type": "button",
                  "label": "Delete Selected Program",
                  "name": "Delete Selected Program",
                  "visible": true,
                  "enabled": true,
                  "renderType": "custom",
                  "renderAttributes": {
                  },
                  "events": [
                    {
                      "name": "Delete Selected Member",
                      "type": "Click",
                      "action": "Custom",
                      "code": "viewerConfig.response.splice([$('#member-table').DataTable().row('.selected').index()],1);\nbundle.completeTableChange();\nK('field[tableProgram]').value(\"\");\nK('field[tableFeeProgram]').value(\"\");\nK('field[tableFee]').value(\"\");\nK('field[tableRegistrationFeeVisible]').value(\"\");\nK('field[tableRegistrationFeeDisplayText]').value(\"\");\nK('field[tableRegistrationFeeChargeTiming]').value(\"\");\nK('field[tableRegistrationFee]').value(\"\");\nif (!bundle.isFamilyWithFee()) {\n  K('field[Registration Fee Visible]').value(\"\");\n  K('field[Registration Fee]').value(\"\");\n  K('field[Registration Fee Display Text]').value(\"\");\n  K('field[Registration Fee Charge Timing]').value(\"\");\n  K('field[Waive Registration Fee]').element().forEach(elem => {$(elem).prop(\"checked\", false)});\n}",
                      "runIf": "$('#member-table tbody tr.selected').length>0"
                    }
                  ]
                }
              ]
            },
            {
              "type": "content",
              "renderType": "html",
              "name": "Members Table",
              "text": "<div id='memberTableDiv'></div>",
              "visible": "values('Include Family Members')!==null",
              "renderAttributes": {
              }
            },
            {
              "type": "field",
              "name": "membersJSON",
              "label": "membersJSON",
              "key": "f52",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "feesJSON",
              "label": "feesJSON",
              "key": "f51",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Fee Total",
              "label": "Fee Total",
              "key": "f72",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Update Taxes",
                  "type": "Change",
                  "action": "Custom",
                  "code": "debugger;\nif (K('field[Fee Total]').value()===null) {\n    K('field[Admin Fee]').value(\"\");\n    K('field[TAX 1]').value(\"\");\n    K('field[TAX 2]').value(\"\");\n    K('field[TAX 3]').value(\"\");\n  \tK('field[I promise to pay equal FREQUENCY instalments of]').value(\"\");\n} else {\n  var total=0;\n  var subTotal=0;\n  var feeTotal=new Number(K('field[Fee Total]').value());\n  \n\tif (K('space').attributes('Ignore Admin Fee')!==\"YES\") {  \n    var adminFee=K('space').attributes('Admin Fee Charge').replace(\"%\",\"\");\n\n    if (adminFee!==\"\" && adminFee!==0) {\n      var value=(Number(feeTotal)*(Number(adminFee)/100));\n      value=new Number(value.toFixed(2));\n      K('field[Admin Fee]').value(value);\n      subTotal=subTotal+value;\n    }\n  }\n  if (bundle.tax1Value!==undefined && bundle.tax1Value!==null){\n    var value=feeTotal*(new Number(bundle.tax1Value));\n    value=new Number(value.toFixed(2));\n    K('field[TAX 1]').value(value);\n    subTotal=subTotal+value;\n  }\n  if (bundle.tax2Value!==undefined && bundle.tax2Value!==null){\n    var value=feeTotal*(new Number(bundle.tax2Value));\n    value=new Number(value.toFixed(2));\n    K('field[TAX 2]').value(value);\n    subTotal=subTotal+value;\n  }\n  if (bundle.tax3Value!==undefined && bundle.tax3Value!==null){\n    var value=feeTotal*(new Number(bundle.tax3Value));\n    value=new Number(value.toFixed(2));\n    K('field[TAX 3]').value(value);\n    subTotal=subTotal+value;\n  }\n  total=feeTotal+subTotal;\n  K('field[I promise to pay equal FREQUENCY instalments of]').value(total.toFixed(2));\n}"
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Admin Fee",
              "label": "<span id=\"admin_fee_label\">Admin Fee</span>",
              "key": "f41",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "TAX 1",
              "label": "TAX 1",
              "key": "f69",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "TAX 2",
              "label": "TAX 2",
              "key": "f70",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "TAX 3",
              "label": "TAX 3",
              "key": "f71",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "I promise to pay equal FREQUENCY instalments of",
              "label": "I promise to pay equal FREQUENCY instalments of",
              "key": "f31",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": "values('Payment Frequency')!=null",
              "enabled": true,
              "required": "values('Payment Frequency')!=null",
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": {
                "regex": "^-?\\d*(.\\d+)?$",
                "message": "Please enter a valid decimal value"
              },
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "content",
              "renderType": "html",
              "name": "The first instalment is due on HTML",
              "text": "<div class=\"form-group required\" linkedField=\"The first instalment is due on\">  \n  <label class=\"field-label\" for=\"firstinstallmentdate\">to <span class='schoolName'></span>. The first instalment is due on</label>\n  <div id=\"firstinstallmentdate\"></div>\n</div>",
              "visible": "!form('review')",
              "renderAttributes": {
              }
            },
            {
              "type": "field",
              "name": "The first instalment is due on",
              "label": "to <span class='schoolName'></span>. The first instalment is due on",
              "key": "f32",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": "form('review')",
              "enabled": true,
              "required": true,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Invalid date",
                  "type": "Change",
                  "action": "Custom",
                  "code": "K('field[The first instalment is due on]').value(\"\");",
                  "runIf": "K('field[The first instalment is due on]').value()===\"Invalid date\""
                },
                {
                  "name": "test",
                  "type": "Change",
                  "action": "Custom",
                  "code": "startDate=K('field[The first instalment is due on]').value();"
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "date"
            },
            {
              "type": "content",
              "renderType": "html",
              "name": "Payline information description",
              "text": "and subsequent instalments are to be paid <span id=\"paymentType\">fortnight</span> afterwards until I give notice that I wish to stop payments according to the terms and conditions including cancellation and membership freeze terms below.",
              "visible": true,
              "renderAttributes": {
              }
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Registration Fee Section",
          "title": null,
          "visible": "values('Registration Fee Visible')==='[\"YES\"]'",
          "omitWhenHidden": true,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "field",
              "name": "Waive Registration Fee",
              "label": "Waive Registration Fee",
              "key": "f95",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": "K(\"identity\").teams.includes(\"Role::Program Managers\")",
              "enabled": "K(\"identity\").teams.includes(\"Role::Program Managers\")",
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Waive Registration Fee",
                  "type": "Change",
                  "action": "Custom",
                  "code": "debugger;\nif (K('field[Waive Registration Fee]').value().length===0){\n\tK('field[Registration Fee]').show();\n} else {\n\tK('field[Registration Fee]').hide();\n}"
                }
              ],
              "renderAttributes": {
              },
              "dataType": "json",
              "renderType": "checkbox",
              "choicesResourceName": null,
              "choicesRunIf": null,
              "choices": [
                {
                  "label": "Waive Registration Fee",
                  "value": "Waive Registration Fee"
                }
              ]
            },
            {
              "type": "field",
              "name": "Registration Fee Visible",
              "label": "Registration Fee Visible",
              "key": "f96",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Registration Fee",
              "label": "<span id='registrationFeeDisplayText'>Registration Fee</span>",
              "key": "f97",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": "values('Waive Registration Fee').length===0",
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Registration Fee Display Text",
              "label": "Registration Fee Display Text",
              "key": "f98",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Registration Fee Charge Timing",
              "label": "Registration Fee Charge Timing",
              "key": "f99",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Accept Terms and Conditions",
          "title": null,
          "visible": false,
          "omitWhenHidden": false,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "field",
              "name": "Accept Gracie Barra Terms and Conditions",
              "label": "Gracie Barra <a href=\"javascript:bundle.toggleGBTermsAndCondition()\">Terms and Conditions</a>",
              "key": "f58",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": "values('PD Submitting')!==\"YES\"",
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
                "class": "acceptTerms"
              },
              "dataType": "json",
              "renderType": "checkbox",
              "choicesResourceName": null,
              "choicesRunIf": null,
              "choices": [
                {
                  "label": "Accept Gracie Barra Terms and Conditions",
                  "value": "Accept Gracie Barra Terms and Conditions"
                }
              ]
            },
            {
              "type": "section",
              "renderType": null,
              "name": "Terms",
              "title": "",
              "visible": false,
              "omitWhenHidden": false,
              "renderAttributes": {
                "class": "gbterms"
              },
              "elements": [
                {
                  "type": "field",
                  "name": "Terms Information Text",
                  "label": "Terms Information Text",
                  "key": "f56",
                  "defaultValue": null,
                  "defaultResourceName": null,
                  "visible": false,
                  "enabled": true,
                  "required": false,
                  "requiredMessage": null,
                  "omitWhenHidden": false,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "text",
                  "rows": 1
                },
                {
                  "type": "content",
                  "renderType": "html",
                  "name": "Terms Information",
                  "text": "<span id=\"termsInformation\"/>",
                  "visible": true,
                  "renderAttributes": {
                  }
                }
              ]
            },
            {
              "type": "field",
              "name": "Accept Bambora Terms and Conditions",
              "label": "Bambora <a href=\"javascript:$(K('section[Bambora Terms]').element()).toggle('slow')\">Terms and Conditions</a>",
              "key": "f59",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
                "class": "acceptTerms"
              },
              "dataType": "json",
              "renderType": "checkbox",
              "choicesResourceName": null,
              "choicesRunIf": null,
              "choices": [
                {
                  "label": "Accept Bambora Terms and Conditions",
                  "value": "Accept Bambora Terms and Conditions"
                }
              ]
            },
            {
              "type": "section",
              "renderType": null,
              "name": "Bambora Terms",
              "title": "",
              "visible": false,
              "omitWhenHidden": false,
              "renderAttributes": {
              },
              "elements": [
                {
                  "type": "field",
                  "name": "Bambora Terms Information Text",
                  "label": "Bambora Terms Information Text",
                  "key": "f57",
                  "defaultValue": null,
                  "defaultResourceName": null,
                  "visible": false,
                  "enabled": true,
                  "required": false,
                  "requiredMessage": null,
                  "omitWhenHidden": false,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "text",
                  "rows": 1
                },
                {
                  "type": "content",
                  "renderType": "html",
                  "name": "Bambora Terms Information",
                  "text": "<span id=\"bamboraTermsInformation\"/>",
                  "visible": true,
                  "renderAttributes": {
                  }
                }
              ]
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Waiver Section",
          "title": null,
          "visible": false,
          "omitWhenHidden": false,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "field",
              "name": "Accept Gracie Barra Waiver",
              "label": "Gracie Barra <a href=\"javascript:$(K('section[Waiver]').element()).toggle('slow')\">Waiver</a>",
              "key": "f85",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": "values('PD Submitting')!==\"YES\"",
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
                "class": "acceptTerms"
              },
              "dataType": "json",
              "renderType": "checkbox",
              "choicesResourceName": null,
              "choicesRunIf": null,
              "choices": [
                {
                  "label": "Accept Gracie Barra Waiver",
                  "value": "Accept Gracie Barra Waiver"
                }
              ]
            },
            {
              "type": "section",
              "renderType": null,
              "name": "Waiver",
              "title": null,
              "visible": false,
              "omitWhenHidden": false,
              "renderAttributes": {
              },
              "elements": [
                {
                  "type": "field",
                  "name": "Waiver Information Text",
                  "label": "Waiver Information Text",
                  "key": "f86",
                  "defaultValue": null,
                  "defaultResourceName": null,
                  "visible": false,
                  "enabled": true,
                  "required": false,
                  "requiredMessage": null,
                  "omitWhenHidden": false,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "text",
                  "rows": 1
                },
                {
                  "type": "content",
                  "renderType": "html",
                  "name": "Waiver Information",
                  "text": "<span id=\"waiverInformation\"/>",
                  "visible": true,
                  "renderAttributes": {
                  }
                }
              ]
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Billing Member Details",
          "title": null,
          "visible": false,
          "omitWhenHidden": false,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "content",
              "renderType": "html",
              "name": "Autocomplete",
              "text": "<div id=\"locationField\">\n  <input id=\"autocomplete\"\n         class=\"form-control\"\n         placeholder=\"Enter your address\"\n         onFocus=\"geolocate()\"\n         type=\"text\"/>\n</div>",
              "visible": "!form('review')",
              "renderAttributes": {
              }
            },
            {
              "type": "field",
              "name": "Address",
              "label": "Address<button class=\"editButton\"  onclick=\"enabledAddressEdit()\">Manually Enter</button>",
              "key": "f3",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": "!form('review')",
              "enabled": false,
              "required": true,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": {
                "regex": "^(.){5,50}$",
                "message": "Address should be between 5 to 50 characters long"
              },
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Suburb",
              "label": "Suburb",
              "key": "f4",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": false,
              "required": true,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": {
                "regex": "^(.){2,30}$",
                "message": "Suburb should be between 2 to 30 characters long"
              },
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Postcode",
              "label": "Postcode",
              "key": "f5",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Country",
              "label": "Country",
              "key": "f55",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "State",
              "label": "State",
              "key": "f6",
              "defaultValue": "",
              "defaultResourceName": null,
              "visible": true,
              "enabled": false,
              "required": true,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": {
                "regex": "^([a-zA-Z0-9]){1,3}$",
                "message": "State should be alphanumeric string between 1 to 3 characters"
              },
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "dropdown",
              "choicesResourceName": null,
              "choicesRunIf": null,
              "choices": [

              ]
            },
            {
              "type": "field",
              "name": "StatePlaceholder",
              "label": "StatePlaceholder",
              "key": "f89",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Mobile",
              "label": "Mobile",
              "key": "f21",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": true,
              "requiredMessage": "Mobile is required",
              "omitWhenHidden": null,
              "pattern": {
                "regex": "([0-9]){10}$",
                "message": "Mobile must be a 10 digit number"
              },
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "DOB",
              "label": "DOB",
              "key": "f7",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [
                {
                  "content": "new Date(values('DOB')). getFullYear()>1900",
                  "message": "DOB Must be a year greater than 1900"
                }
              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "date"
            },
            {
              "type": "field",
              "name": "Email",
              "label": "Email",
              "key": "f9",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": {
                "regex": "[A-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[A-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[A-z0-9](?:[A-z0-9-]*[A-z0-9])?\\.)+[A-z0-9](?:[A-z0-9-]*[A-z0-9])?$",
                "message": "Email should be a valid email address"
              },
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Payment Details",
          "title": "Payment Details",
          "visible": false,
          "omitWhenHidden": false,
          "renderAttributes": {
            "class": "services-paysmart-billing-details"
          },
          "elements": [
            {
              "type": "field",
              "name": "Source IP",
              "label": "Source IP",
              "key": "f83",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Payment Method",
              "label": "Payment Method",
              "key": "f88",
              "defaultValue": "",
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": "values('PD Submitting')!==\"YES\"",
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "dropdown",
              "choicesResourceName": null,
              "choicesRunIf": null,
              "choices": [
                {
                  "label": "Credit Card",
                  "value": "Credit Card"
                }
              ]
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Credit Card Details",
          "title": "Credit Card Details",
          "visible": "values('Payment Method') === 'Credit Card'",
          "omitWhenHidden": true,
          "renderAttributes": {
            "class": "services-paysmart-billing-details"
          },
          "elements": [
            {
              "type": "content",
              "renderType": "html",
              "name": "Credit Card Capture",
              "text": "<div class=\"card-container\">\n    <div class=\"row\">\n        <!-- Add form -->\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-lg-12 text-center\">\n        <div id=\"feedback\"></div>\n    </div>\n</div>\n",
              "visible": true,
              "renderAttributes": {
              }
            },
            {
              "type": "field",
              "name": "Credit Card Token",
              "label": "Credit Card Token",
              "key": "f14",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": "values('PD Submitting')!==\"YES\"",
              "requiredMessage": "Credit Card token is required. Please verify card details.",
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Credit Card Number",
              "label": "Credit Card Number",
              "key": "f15",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": "values('Payment Method') === 'Credit Card'",
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": {
                "regex": "^(?:4[0-9]{12}(?:[0-9]{3})?|(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|6(?:011|5[0-9]{2})[0-9]{12}|(?:2131|1800|35\\d{3})\\d{11}|^...[0-9][0-9][0-9][0-9])$",
                "message": "Credit card number should be a valid CC number"
              },
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Credit Card Expiry Month",
              "label": "Credit Card Expiry Month",
              "key": "f63",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Credit Card Expiry Year",
              "label": "Credit Card Expiry Year",
              "key": "f64",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "CVV",
              "label": "CVV",
              "key": "f62",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "POS Profile ID",
              "label": "POS Profile ID",
              "key": "f67",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Card Error",
          "title": "",
          "visible": false,
          "omitWhenHidden": true,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "content",
              "renderType": "html",
              "name": "Error Details",
              "text": "<p class=\"errorDetails\" id=\"errorValue\"/p>",
              "visible": true,
              "renderAttributes": {
              }
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Signatures",
          "title": null,
          "visible": false,
          "omitWhenHidden": false,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "content",
              "renderType": "html",
              "name": "Member Signature",
              "text": "<label class=\"field-label required\">Member Signature</label>\n<div id=\"member-signature-canvas\"/>",
              "visible": true,
              "renderAttributes": {
              }
            },
            {
              "type": "field",
              "name": "Encoded Member Signature",
              "label": "Encoded Member Signature",
              "key": "f36",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": "values('PD Submitting')!==\"YES\"",
              "requiredMessage": "Member Signature is required",
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Hidden Fields",
          "title": null,
          "visible": false,
          "omitWhenHidden": false,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "field",
              "name": "customerBillingId",
              "label": null,
              "key": "f65",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Status",
              "label": "Status",
              "key": "f27",
              "defaultValue": "Send Receipt",
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Form Completion Sent",
              "label": "Form Completion Sent",
              "key": "f90",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "datetime"
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Member Select Space",
          "title": null,
          "visible": "values('PD Submitting')===\"YES\"",
          "omitWhenHidden": true,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "content",
              "renderType": "html",
              "name": "Member Select Space",
              "text": "<div style=\"height:100px\"></div>",
              "visible": true,
              "renderAttributes": {
              }
            }
          ]
        },
        {
          "type": "field",
          "name": "Send Type",
          "label": "Type of communication to receive Registration completion",
          "key": "f100",
          "defaultValue": null,
          "defaultResourceName": null,
          "visible": "values('PD Submitting')===\"YES\"",
          "enabled": true,
          "required": "values('PD Submitting')===\"YES\"",
          "requiredMessage": null,
          "omitWhenHidden": true,
          "pattern": null,
          "constraints": [

          ],
          "events": [

          ],
          "renderAttributes": {
          },
          "dataType": "string",
          "renderType": "radio",
          "choicesResourceName": null,
          "choicesRunIf": null,
          "choices": [
            {
              "label": "SMS",
              "value": "SMS"
            },
            {
              "label": "Email",
              "value": "Email"
            }
          ]
        },
        {
          "type": "content",
          "renderType": "text",
          "name": "Save Info",
          "text": "Note, when clicking \"Save for Member to Complete\" an email will be sent to the Member to complete the Registration.",
          "visible": "values('PD Submitting')===\"YES\"",
          "renderAttributes": {
          }
        },
        {
          "type": "button",
          "label": "Save and Send to Member for Completion",
          "name": "Save for Member to Complete",
          "visible": "values('PD Submitting')===\"YES\"",
          "enabled": "values('I promise to pay equal FREQUENCY instalments of')!==null && values('The first instalment is due on')!==null",
          "renderType": "custom",
          "renderAttributes": {
          },
          "events": [
            {
              "name": "Save For Later",
              "type": "Click",
              "action": "Custom",
              "code": "if (Object.keys(K('form').validate()).length>0) {\n  K('form').submitPage();\n} else {\n  K('button[Save for Member to Complete]').disable();\n  K('field[Form Completion Sent]').value(moment().format(\"YYYY-MM-DDTHH:mm:ssZ\"));\n  K('form').save();\n}"
            }
          ]
        },
        {
          "type": "button",
          "label": "Submit",
          "name": "Submit",
          "visible": false,
          "enabled": true,
          "renderType": "custom",
          "renderAttributes": {
          },
          "events": [
            {
              "name": "Submit",
              "type": "Click",
              "action": "Custom",
              "code": "debugger;\n\nif (Object.keys(K('form').validate()).length>0) {\n  K('form').submitPage();\n} else {\n  \tK('button[Submit]').disable();\n    setTimeout(function(){\n      if (bundle.submitProcessing) {\n        console.log(\"Already processing IGNORING...\");\n        return;\n      } else {\n        bundle.submitProcessing=true;\n      }\n      var creditCardSettings = {\n        \"crossDomain\": true,\n        \"url\": K('space').attributes('Kinetic Billing Server URL')+\"/createProfileCard\",\n        \"method\": \"POST\",\n        \"headers\": {},\n        \"dataType\": \"json\",\n        \"contentType\": \"application/json\",\n        \"data\": JSON.stringify({\n          \"space\": K('space').slug(),\n          \"billingService\": \"Bambora\",\n          \"token\": K('field[Credit Card Token]').value(),\n          \"country\": K('field[Country]').value(),\n          \"name\": K('field[Student First Name]').value()+\" \"+K('field[Student Last Name]').value(),\n          \"address\": K('field[Address]').value(),\n          \"city\": K('field[Suburb]').value(),\n          \"province\": K('field[State]').value(),\n          \"postalCode\": K('field[Postcode]').value(),\n          \"email\": K('field[Email]').value(),\n        })\n      }\n\n    $.ajax(creditCardSettings).done(function (responseCard) {\n      debugger;\n      console.log(responseCard);\n      if (responseCard.error===100) {\n        var data=JSON.parse(responseCard.data);\n        var message=data.status_message;\n        $(\"#errorValue\").html(message);\n        K('section[Card Error]').show();\n        setTimeout(function(){\n          K('button[Submit]').enable();\n          bundle.submitProcessing=false;\n        },100);\n      } else {    \n        var data=JSON.parse(responseCard.data);\n        var registerSettings = {\n          \"crossDomain\": true,\n          \"url\": K('space').attributes('Kinetic Billing Server URL')+\"/registerUser\",\n          \"method\": \"POST\",\n          \"headers\": {},\n          \"dataType\": \"json\",\n          \"contentType\": \"application/json\",\n          \"data\": JSON.stringify({\n            \"customerId\": K('field[Member ID]').value(),\n            \"firstName\": K('field[Student First Name]').value(),\n            \"lastName\": K('field[Student Last Name]').value(),\n            \"address\": K('field[Address]').value(),\n            \"suburb\": K('field[Suburb]').value(),\n            \"state\": K('field[State]').value(),\n            \"postCode\": K('field[Postcode]').value(),\n            \"country\": K('field[Country]').value(),\n            \"email\": K('field[Email]').value(),\n            \"mobile\": K('field[Mobile]').value(),\n            \"payment\": K('field[I promise to pay equal FREQUENCY instalments of]').value(),\n            \"firstPayment\": K('field[I promise to pay equal FREQUENCY instalments of]').value(),\n            \"billingPeriod\": K('field[Payment Frequency]').value(),\n            \"contractStartDate\": K('field[The first instalment is due on]').value(),\n            \"paymentMethod\": K('field[Payment Method]').value(),\n            \"adminFee\": K('field[Admin Fee]').value()!==null ? K('field[Admin Fee]').value().replace(\"%\",\"\") : \"\",\n            \"space\": K('space').slug(),\n            \"billingService\": \"Bambora\",\n            \"gbmemberId\": K('submission').id(),\n            \"cardProfileID\": data.profileId,\n          })\n        }\n        K('field[POS Profile ID]').value(data.profileId);\n\n        $.ajax(registerSettings).done(function (response) {\n          debugger;\n          console.log(response);\n          if (response.error===100) {\n            var message=response.errorMessage;\n            if (response.errorMessage===\"DECLINE\") {\n              message=\"Credit Card not valid (Declined)\";  \n            }\n            $(\"#errorValue\").html(message);\n            K('section[Card Error]').show();\n            setTimeout(function(){\n              K('button[Submit]').enable();\n                      },100);\n          } else {\n            K('section[Card Error]').hide();\n            K('field[customerBillingId]').value(response.data.customerBillingId);\n            K('form').submitPage();      \n          }\n        });\n      }\n    })\n  }, 100);\n}\n"
            }
          ]
        }
      ],
      "events": [
        {
          "name": "Load Member Signatures",
          "type": "Load",
          "action": "Custom",
          "code": "bundle.tax1Value;\nbundle.tax2Value;\nbundle.tax3Value;\nbundle.submitProcessing=false;  \n  \nbundle.setupMemberTable = function(){\n    viewerConfig.response = (K('field[feesJSON]').value()===null ? [] : JSON.parse(K('field[feesJSON]').value()));\n    DataViewer.renderResults($('#memberTableDiv'), viewerConfig);\n\n    setTimeout(function() {\n      $(\"#discountDialog\").dialog({\n        autoOpen : false, modal : true, show : \"blind\", hide : \"blind\"\n      });\n    },1000);    \n  }\n  \nbundle.getInt = function(val){\n    //So as not to breakup a potential fraction\n    let v = parseFloat(val);\n    //If we only have the whole:\n    if(v % 1 === 0){\n      return v;  \n    //If the numberis a fraction  \n    }else{\n      let n = v.toString().split('.').join('');\n      return parseInt(n);\n    }\n  }  \nbundle.editDiscount = function(id){\n    $(\"#discountDialog\").attr(\"rowID\", id);\n    let dataRow=global.viewerConfig.response.find(row => row.id===id);\n    $(\"#discountDialog .discountPercent\").val(dataRow.discount);\n    $(\"#discountDialog\").dialog(\"open\");\n    \n  }\nbundle.applyCurrentDiscount = function(){\n    debugger;\n    let id=$(\"#discountDialog\").attr(\"rowID\");\n    let dataRow=global.viewerConfig.response.find(row => row.id===id);\n    dataRow.discount=$(\"#discountDialog .discountPercent\").val();\n    dataRow.edited=true;\n    $(\"#discountDialog\").dialog(\"close\");\n    bundle.completeTableChange();\n  }\nbundle.isPublic = function(){\n    return window.location.hash.includes(\"public\"); \n  }\nbundle.GetURLParameter = function(sParam){\n    arr=window.location.hash.split(sParam+\"=\");\n    if (arr.length>0){\n      return arr[1];\n    }\n    return null;\n  }  \n\nbundle.submitProcessing=false;  \nbundle.termsInformation=\"\";\nbundle.storeTermsAndConditions = function(){\n  \tvar startDate=K('field[The first instalment is due on]').value();\n  \tif (startDate!==null && startDate!==\"Invalid date\"){\n      startDate=moment(startDate,\"YYYY-MM-DD\").format(\"L\");\n      var termsInfo=bundle.termsInformation;\n      var schoolName=K('space').attributes('School Name');\n      if (schoolName.startsWith(\"GB \")){\n       schoolName=schoolName.replace(\"GB \",\"\"); \n      }\n      if (schoolName.startsWith(\"Gracie Barra \")){\n       schoolName=schoolName.replace(\"Gracie Barra \",\"\"); \n      }\n      var membershipEmail=K('space').attributes('Membership Email');\n      var schoolEmail=K('space').attributes('School Email');\n      if (membershipEmail===null) membershipEmail=schoolEmail;\n      var schoolLegalName=K('space').attributes('School Legal Name');\n      var schoolAddress=K('space').attributes('School Address');\n      var paymentFreq=K.translate(K('field[Payment Frequency]').value());\n      var cancellationDuration=K('space').attributes('Cancellation Duration');\n      if (cancellationDuration===undefined || cancellationDuration===\"\") {\n      \tcancellationDuration=\"30\";  \n      }\n      termsInfo=termsInfo.replaceAll(\"$cancellation_duration$\", cancellationDuration);\n      termsInfo=termsInfo.replaceAll(\"$membership_email$\", membershipEmail);\n      termsInfo=termsInfo.replaceAll(\"$school_name$\", schoolName);\n      termsInfo=termsInfo.replaceAll(\"$school_legal_name$\", schoolLegalName);\n      termsInfo=termsInfo.replaceAll(\"$school_address$\", schoolAddress);\n      termsInfo=termsInfo.replaceAll(\"$payment_period$\", paymentFreq);\n      \n      termsInfo=termsInfo.replaceAll(\"$start_date$\", startDate);\n      var freezeCharge=K('space').attributes('School Freeze Charge');\n      if (K('field[Payment Frequency]').value()===\"Fortnightly\"){\n        freezeCharge=\"$\"+(parseFloat(freezeCharge)/2).toFixed(2);\n      } else {\n        freezeCharge=\"$\"+freezeCharge;\n      }\n      termsInfo=termsInfo.replaceAll(\"$frozen_charge$\", freezeCharge);\n      \n      K('field[Terms Information Text]').value(termsInfo);  \n      $(\"#termsInformation\").html(termsInfo);\n    }\n}\nbundle.toggleGBTermsAndCondition = function() {\n  \tdebugger;\n  if (K('form').reviewMode()) {\n\t\tbundle.termsInformation=K('field[Terms Information Text]').value();  \n\t\t$(\"#termsInformation\").html(bundle.termsInformation); \n  } else {\n  \tbundle.storeTermsAndConditions();\n  }\n  $('.gbterms').toggle('slow');\n}\nbundle.discounts;\nbundle.isFamilyWithNoFee = function(){\n\tif (K('field[Include Family Members]').value()===\"Yes\" && (K('field[Registration Fee]').value()===null || K('field[Registration Fee]').value()===\"\")) {\n      return true;\n  }\n  if (K('field[Include Family Members]').value()===\"No\") {\n    return true;\n  }\n  return false;\n}\nbundle.isFamilyWithFee = function(){\n\tif (K('field[Include Family Members]').value()===\"Yes\" && K('field[Registration Fee]').value()!==null && K('field[Registration Fee]').value()!==\"\" && viewerConfig.response.length>0) {\n      return true;\n  }\n  return false;\n}\nbundle.completeTableChange = function(pageReload){\n  K('field[Family Member]').value(\"\");\n\t$(K(\"form\").find(\"#selectFamilyMemberMenu [class$='placeholder']\")).html(\"Select...\");  \t\t\t\t\n  K('field[Programs]').value(\"\");\n  K('field[tableMemberID]').value(\"\");\n  K('field[tableMemberName]').value(\"\");\n  K('field[tableProgram]').value(\"\");\n  K('field[tableFee]').value(\"\");\n\n  // Sort table\n  viewerConfig.response.sort(function(a, b){return b.cost - a.cost});\n  // Let calculate the discounts\n  viewerConfig.response.forEach(function(item, index){\n    if (item.edited) {\n        item.fee=((new Number(item.cost)) - ((new Number(item.cost))*(new Number(item.discount.replace(\"%\",\"\")))/100)).toFixed(2);\n    } else {\n      if (index<=bundle.discounts.length-1){\n        item.discount=bundle.discounts[index].discount;\n        item.fee=((new Number(item.cost))*bundle.discounts[index].cost).toFixed(2);\n      } else if (index>bundle.discounts.length-1 && bundle.discounts.length>0){\n        item.discount=bundle.discounts[bundle.discounts.length-1].discount;\n        item.fee=((new Number(item.cost))*bundle.discounts[bundle.discounts.length-1].cost).toFixed(2);\n      } else {\n      item.discount=\"0%\";\n      item.fee=((new Number(item.cost))).toFixed(2);\n    \t}\n    }\n  });\n  debugger;\n  // Set payment value\n \n  if (pageReload===undefined) { // Not recalcuated if Prev Page reloaded\n    var feeTotal=0;\n    var subTotal=0;\n    var total=0;\n    viewerConfig.response.forEach(function(item, index){\n      feeTotal=feeTotal+(new Number((new Number(item.fee)).toFixed(2)));\n    });\n    if (feeTotal===0) {\n      K('field[Fee Total]').value(\"0\");\n      K('field[TAX 1]').value(\"\");\n      K('field[TAX 2]').value(\"\");\n      K('field[TAX 3]').value(\"\");\n      K('field[I promise to pay equal FREQUENCY instalments of]').value(\"0\");\n    } else {\n      // Add taxes if configured\n      if (bundle.tax1Value!==undefined && bundle.tax1Value!==null){\n        var value=feeTotal*(new Number(bundle.tax1Value));\n        value=new Number(value.toFixed(2));\n        K('field[TAX 1]').value(value);\n        subTotal=subTotal+value;\n      }\n      if (bundle.tax2Value!==undefined && bundle.tax2Value!==null){\n        var value=feeTotal*(new Number(bundle.tax2Value));\n        value=new Number(value.toFixed(2));\n        K('field[TAX 2]').value(value);\n        subTotal=subTotal+value;\n      }\n      if (bundle.tax3Value!==undefined && bundle.tax3Value!==null){\n        var value=feeTotal*(new Number(bundle.tax3Value));\n        value=new Number(value.toFixed(2));\n        K('field[TAX 3]').value();\n        subTotal=subTotal+value;\n      }\n      total=feeTotal+subTotal;\n      K('field[I promise to pay equal FREQUENCY instalments of]').value(total.toFixed(2));\n\t    K('field[Fee Total]').value(feeTotal.toFixed(2));              \n      if (K('space').attributes('Ignore Admin Fee')===null || K('space').attributes('Ignore Admin Fee')!==\"YES\") {  \n        var adminFee=K('space').attributes('Admin Fee Charge').replace(\"%\",\"\");\n        var registrationFee= K('field[tableRegistrationFee]').value();\n        if (registrationFee!==null && registrationFee!==\"\" && registrationFee!==0 && bundle.isFamilyWithNoFee()) {\n          var value=Number(registrationFee)+(Number(registrationFee)*(Number(adminFee)/100));\n          value=new Number(value.toFixed(2));\n          K('field[Registration Fee]').value(value);\n        }\n      } else {\n        var registrationFee= K('field[tableRegistrationFee]').value();\n        if (registrationFee!==null && registrationFee!==\"\" && registrationFee!==0 && bundle.isFamilyWithNoFee()) {\n          K('field[Registration Fee]').value(registrationFee);\n        }\n      } \n      if (bundle.isFamilyWithFee()) {\n        K('field[Registration Fee]').enable();\n      } else {\n        K('field[Registration Fee]').disable();\n      }\n    }    \n  }\n  global.viewerConfig.renderer.type($('#memberTableDiv'),global.viewerConfig);\n\n  $('#member-table tbody tr').on( 'click', function () {\n    if ( $(this).hasClass('selected') ) {\n      $(this).removeClass('selected');\n    }\n    else {\n      $('#member-table').DataTable().$('tr.selected').removeClass('selected');\n      $(this).addClass('selected');\n    }\n  } );  \n  K('field[feesJSON]').value(JSON.stringify(viewerConfig.response));\n\n  members=new Array();\n  viewerConfig.response.forEach(function(item){\n    members.push(item.id);\n  });\n  K('field[membersJSON]').value(JSON.stringify(members));  \n}  \n  \nbundle.memberProgramAdded = function(memberID, feeProgram) {\n  found=false;\ndebugger;\n  viewerConfig.response.forEach(function(item){\n      if (item.id===memberID && item.feeProgram===feeProgram) {\n        found=true;\n      }\n  });  \n  return found;\n}\n\n\nbundle.config.widgets.signatureCanvas({\n  element: K(\"form\").find(\"#member-signature-canvas\")[0],\n  initialValue: K(\"field[Encoded Member Signature]\").value(),\n  onChange: function(value) {\n    K(\"field[Encoded Member Signature]\").value(value);\n  },\n  height: 250,\n  width: 500,\n  disable: form('review'),\n  ref: function(el) {\n    window.memberSignaturePad = el;\n  },\n});\n",
          "runIf": ""
        },
        {
          "name": "Load PD Select",
          "type": "Load",
          "action": "Custom",
          "code": "bundle.discounts=(K('space').attributes('Member Discounts')!==undefined ? JSON.parse(K('space').attributes('Member Discounts')) : []);  \ndebugger;\nif (bundle.GetURLParameter(\"memberid\")!==null && bundle.GetURLParameter(\"memberid\")!==undefined){\n  K('field[Member GUID]').value(bundle.GetURLParameter(\"memberid\"));\n}\n\nif (K(\"identity\").teams.includes(\"Role::Program Managers\")) {\n    K('section[Student Information]').show();  \n    K('field[PD Submitting]').value(\"YES\");\n\n    bundle.config.widgets.selectMenu({\n      element: K(\"form\").find(\"#selectFamilyMemberMenu\")[0],\n      options: K('field[Family Member]').options(),\n      onChange: function(option) {\n        K('field[Family Member]').value(option.value);\n        setTimeout(function(){\n          $(K(\"form\").find(\"#selectFamilyMemberMenu [class$='placeholder']\")).html(option.label);\n        },100);\n      },\n      value: K('field[Family Member]').value(),\n    });    \n}\n\n",
          "runIf": "values('Member ID')===null"
        },
        {
          "name": "Handle Errors",
          "type": "Submit",
          "action": "Custom",
          "code": "bundle.storeTermsAndConditions();\n\nif (!jQuery.isEmptyObject(K('form').validate())){\n  setTimeout(function(){\n  if ($(\".has-error\").length>0){\n    $(\".has-error\").each(function(i,l) { \n      if ($(l).attr(\"data-element-name\").indexOf(\"Signature\")!==-1) {\n        sigCanElName=$(l).attr(\"data-element-name\").replace(\"Encoded \",\"\");\n        $(K('content['+sigCanElName+']').element()).addClass(\"has-error\");\n      }\n    })  \n    $('.main-container').animate({\n      scrollTop: 0\n    },500);\n  }\n  },100);\n}"
        },
        {
          "name": "Load Previous set page",
          "type": "Load",
          "action": "Custom",
          "code": "debugger;\n\nK('section[Student Information]').show();\nK('section[Program Information]').show();\n\nK('section[Member Select Space]').hide();    \n\nbundle.discounts=(K('space').attributes('Member Discounts')!==undefined ? JSON.parse(K('space').attributes('Member Discounts')) : []);  \nsetTimeout(function(){\n  bundle.completeTableChange(true);\n}, 500);",
          "runIf": "values('Member ID')!==null"
        },
        {
          "name": "Set Payment Frequencies",
          "type": "Load",
          "action": "Custom",
          "code": "options=[];\nvar freqValue=K('field[Payment Frequency]').value();\nK('space').attributes('Payment Frequencies').split(\",\").forEach(function(value) {\n\toptions[options.length]={'label':value,'value':value};\n});\nK('field[Payment Frequency]').options(options);\nsetTimeout(function() { K('field[Payment Frequency]').value(freqValue); }, 100, freqValue);\n\nif (form('review')) K('field[Payment Frequency]').disable();\ndebugger;\nif (K('space').attributes('Ignore Admin Fee')===\"YES\") {\n  K('field[Admin Fee]').hide();\n  K('field[Admin Fee]').value(\"\");\n} else {\n  if (K('space').attributes('Admin Fee Label')!==null && K('space').attributes('Admin Fee Label')!==\"\" && (K('field[Admin Fee]').value()===null || K('field[Admin Fee]').value().indexOf(\"%\")===-1)) {\n    $(\"#admin_fee_label\").html(K('space').attributes('Admin Fee Label'));\n  }\n}",
          "runIf": ""
        },
        {
          "name": "Load Members Table",
          "type": "Load",
          "action": "Custom",
          "code": "global.viewerConfig ={\n  resultsContainer:\n  '<table cellspacing=\"0\", border=\"0\", class=\"table table-striped table-bordered table-condensed dataTable\">',\n  data: [\n  {\n  title: 'MemberID',\n  name: 'id',\n  setField: 'tableMemberID',\n  class: 'hidden'\n  },\n  {\n  title: 'Name',\n  name: 'Name',\n  setField: 'tableMemberName'\n  },\n  {\n  title: 'Fee Program',\n  name: 'feeProgram',\n  setField: 'tableFeeProgram',\n  class: 'hidden'\n  },\n  {\n  title: 'Program',\n  name: 'program',\n  setField: 'tableProgram'\n  },\n  {\n  title: 'Fee',\n  name: 'fee',\n  setField: 'tableFee'\n  },\n  {\n  title: 'Cost',\n  name: 'cost',\n  class: 'hidden',\n  setField: 'tableFee'\n  },\n\t{\n  title: 'Discount',\n  name: 'discount',\n    render: function ( data, type, record ) {\n      return \"<span>\"+data+\"<i class='discountEdit fa fa-pen review_\"+form('review')+\"' placeholder='Edit member discount' onclick='bundle.editDiscount(\\\"\"+record.id+\"\\\")'></i></span>\";\n    },\n  },\n ],\n  resultsContainerId: 'member-table',\n  before: function(configObj) {\n\n  },\n  error: function(configObj) {},\n  complete: function(configObj) {\n\n  },\n  removeOnClick: false,\n  renderer: {\n  type: DataViewer.Renderers.DataTables, // Passing a function here allows for better customization\n  options: {\n  // Options for Render\n  processSingleResult: false,\n  // DataTable OPTIONS; Passing options here make it clear that they are being passed to data tables\n  // responsive: OPTIONAL Default for \"BridgeDataTable\" is true but can be over written.\n  responsive: false,\n  dom: 'tip',\n  orderFixed: [[4, 'desc']], /* Fee */\n  paging: false,\n  scrollY: '60vh',\n  scrollCollapse: true,\n  select: {\n  \tstyle: 'single',\n\t\tselector: 'td:first-child'\n\t},\n  createdRow: function createdRow(row, data, dataIndex) {\n\n  },\n\tdeferRender: true,\n}\n}\n};\ndebugger;\nviewerConfig.response = (K('field[feesJSON]').value()===null ? [] : JSON.parse(K('field[feesJSON]').value()));\nDataViewer.renderResults($('#memberTableDiv'), viewerConfig);\n\nsetTimeout(function() {\n  $(\"#discountDialog\").dialog({\n    autoOpen : false, modal : true, show : \"blind\", hide : \"blind\"\n  });\n},5000);\n"
        },
        {
          "name": "Embed School Names",
          "type": "Load",
          "action": "Custom",
          "code": "$(\".schoolName\").html(K('space').attributes('School Name'));\n$(\".legalName\").html(K('space').attributes('School Legal Name'));\n$(\".schoolEmail\").html(K('space').attributes('School Email'));\n\n"
        },
        {
          "name": "Load Terms and Conditions",
          "type": "Load",
          "action": "Custom",
          "code": "K('bridgedResource[Get Terms and Conditions]').load({\n  success: function(bridgedData) {\n    debugger;\n    bundle.termsInformation=bridgedData[0][\"Terms Information\"];\n    var termsInfo=bundle.termsInformation;\n    K('field[Terms Information Text]').value(termsInfo);\n    $(\"#termsInformation\").html(termsInfo);\n  }\n});\n",
          "runIf": "!form('review')"
        },
        {
          "name": "Display Terms and Conditions",
          "type": "Load",
          "action": "Custom",
          "code": "",
          "runIf": "form('review')"
        },
        {
          "name": "Load Bambora Terms and Conditions",
          "type": "Load",
          "action": "Custom",
          "code": "K('bridgedResource[Get Bambora Terms and Conditions]').load({\n  success: function(bridgedData) {\n    debugger;\n    K('field[Bambora Terms Information Text]').value(bridgedData[0][\"Terms Information\"]);\n    $(\"#bamboraTermsInformation\").html(bridgedData[0][\"Terms Information\"]);\n  }\n});\n",
          "runIf": "K('field[Bambora Terms Information Text]').value()===null"
        },
        {
          "name": "Display Bambora Terms and Conditions",
          "type": "Load",
          "action": "Custom",
          "code": "$(\"#bamboraTermsInformation\").html(K('field[Bambora Terms Information Text]').value());",
          "runIf": "K('field[Bambora Terms Information Text]').value()!==null"
        },
        {
          "name": "Member Completion Load",
          "type": "Load",
          "action": "Custom",
          "code": "debugger;\n\nif (K(\"identity\").teams.includes(\"Role::Program Managers\") && !bundle.isPublic()) {\n  K('field[PD Submitting]').value(\"YES\");\n  K('section[Member Select Space]').show();\n    bundle.config.widgets.selectMenu({\n    element: K(\"form\").find(\"#selectFamilyMemberMenu\")[0],\n    options: K('field[Family Member]').options(),\n    onChange: function(option) {\n      K('field[Family Member]').value(option.value);\n      setTimeout(function(){\n        $(K(\"form\").find(\"#selectFamilyMemberMenu [class$='placeholder']\")).html(option.label);\n      },100);\n    },\n    value: K('field[Family Member]').value(),\n  });    \n\n  if (K('space').attributes('School Country Code')!==\"\" && K('space').attributes('School Country Code')!==null && K('space').attributes('School Country Code')!==undefined) {\n   K('field[Country]').value(K('space').attributes('School Country Code'));\n  }  \n  if ($(K(\"form\").find(\"#firstinstallmentdate\")[0]).html()===\"\") {\n    var installDate=moment().add(1,\"days\");\n/*    if (K('field[The first instalment is due on]').value()===undefined || K('field[The first instalment is due on]').value()===null) {\n    \tK('field[The first instalment is due on]').value(installDate.format(\"YYYY-MM-DD\"));  \n    } */\n    if (K('field[The first instalment is due on]').value()!==undefined && K('field[The first instalment is due on]').value()!==null) {\n    \tinstallDate=moment(K('field[The first instalment is due on]').value(),\"YYYY-MM-DD\");  \n    }\n    \n    bundle.config.widgets.xdsoftDatepicker({\n      element: K(\"form\").find(\"#firstinstallmentdate\")[0],\n      timepicker: false,\n      displayDateFormat: \"MM/DD/YYYY\",\n      options: {\n        startDate: installDate.toDate(),\n        minDate: 0,\n        formatDate:\"d-m-Y\",\n        validateOnBlur:false\n      },\n      onSelectDate:function(ct,$i){\n        K('field[The first instalment is due on]').value(ct.dateFormat('YYYY-MM-DD'));\n      },\n      onGenerate: function( ct ){\n/*          $(\".datetimepicker input\").val(moment(K('field[The first instalment is due on]').value(),\"YYYY-MM-DD\").format(\"MM/DD/YYYY\")); */\n      } \n    });          \n  }  \n} else if (bundle.isPublic()){\n    var id=bundle.GetURLParameter(\"id\");\n    if (id===undefined) {\n      var parts=window.location.href.split(\"/\");\n      parts=parts[parts.length-1].split(\"?\");\n      id=parts[0];\n    }\n  \tK('field[Migration ID]').value(id);\n    if ($(\".package-layout--services\").length===0) {\n      $(\"body\").css(\"height\",\"auto\");\n    }  \n}",
          "runIf": "!form('review')"
        },
        {
          "name": "Review",
          "type": "Load",
          "action": "Custom",
          "code": "K('content[GBLogo]').hide();\nK('section[Student Information]').show();  \nK('section[Program Information]').show();      \nK('section[Accept Terms and Conditions]').show();      \nK('section[Waiver Section]').show();      \nK('section[Billing Member Details]').show();      \nK('section[Credit Card Details]').hide();          \nK('section[Signatures]').show();          \n\n/*bundle.toggleGBTermsAndCondition();*/\n$(\"b\").each( function() {\n    $(this).replaceWith( $(\"<span style='font-weight:bold;'>\").html( $(this).html() ) );\n});\n\n",
          "runIf": "form('review')"
        },
        {
          "name": "Set Tax Fields",
          "type": "Load",
          "action": "Custom",
          "code": "debugger;\nlet tax1Label=K('space').attributes('TAX 1 Label'); \nbundle.tax1Value=K('space').attributes('TAX 1 Value');     \nif (tax1Label!==undefined && tax1Label!==null && tax1Label!==\"\") {\n\t$(K('field[TAX 1]').wrapper()).find(\"label\").html(tax1Label);\n  K('field[TAX 1]').show();\n}\n\nlet tax2Label=K('space').attributes('TAX 2 Label'); \nbundle.tax2Value=K('space').attributes('TAX 2 Value');                \nif (tax2Label!==undefined && tax2Label!==null && tax2Label!==\"\") {\n\t$(K('field[TAX 2]').wrapper()).find(\"label\").html(tax2Label);\n  K('field[TAX 2]').show();\n}\n\nlet tax3Label=K('space').attributes('TAX 3 Label'); \nbundle.tax3Value=K('space').attributes('TAX 3 Value');                \nif (tax3Label!==undefined && tax3Label!==null && tax3Label!==\"\") {\n\t$(K('field[TAX 3]').wrapper()).find(\"label\").html(tax3Label);\n  K('field[TAX 3]').show();\n}\n\nif (!form('review') && values('PD Submitting')===\"YES\") {\n  K('field[Fee Total]').enable();\n}\nif (form('review')) {\n  if (K('field[Fee Total]').value()===null || K('field[Fee Total]').value()===\"\"){\n    K('field[Fee Total]').hide();\n  } else {\n    K('field[Fee Total]').show();\n  }\n} else {\n  K('field[Fee Total]').show();\n}\nK('field[I promise to pay equal FREQUENCY instalments of]').disable();\n"
        },
        {
          "name": "Setup Credit Card Capture",
          "type": "Load",
          "action": "Custom",
          "code": "var customCheckout = undefined;\nvar isCardNumberComplete = false;\nvar isCVVComplete = false;\nvar isExpiryComplete = false;\nsetTimeout(function(){\n  customCheckout = customcheckout();\n  var customCheckoutController = {\n    init: function() {\n      console.log('checkout.init()');\n      formElem=$(\"<form id='checkout-form' class='form-inline  text-center'></form>\");\n      formElem.append(\"<div class='form-group col-xs-6 has-feedback' id='card-number-bootstrap'><div id='card-number' class='form-control'></div><label class='help-block' for='card-number' id='card-number-error'></label></div>\");\n      formElem.append(\"<div class='form-group col-xs-2 has-feedback' id='card-cvv-bootstrap'><div id='card-cvv' class='form-control'></div><label class='help-block' for='card-cvv' id='card-cvv-error'></label></div>\");\n      formElem.append(\"<div class='form-group col-xs-2 has-feedback' id='card-expiry-bootstrap'><div id='card-expiry' class='form-control'></div><label class='help-block' for='card-expiry' id='card-expiry-error'></label></div>\");\n      formElem.append(\"<div class='col-xs-2 text-center'><button id='pay-button' type='submit' class='verifyBtn btn-primary disabled' disabled='true'>Create Token</button></div>\");\n      $(\".card-container .row\").append(formElem);      \n      customCheckoutController.createInputs();\n      customCheckoutController.addListeners();\n    },\n    createInputs: function() {\n      console.log('checkout.createInputs()');\n      var options = {};\n\n      // Create and mount the inputs\n      options.placeholder = 'Card number';\n      customCheckout.create('card-number', options).mount('#card-number');\n\n      options.placeholder = 'CVV';\n      customCheckout.create('cvv', options).mount('#card-cvv');\n\n      options.placeholder = 'MM / YY';\n      customCheckout.create('expiry', options).mount('#card-expiry');\n    },\n    addListeners: function() {\n      var self = this;\n\n      // listen for submit button\n      if (document.getElementById('checkout-form') !== null) {\n        document\n        .getElementById('checkout-form')\n        .addEventListener('submit', self.onSubmit.bind(self));\n      }\n\n      customCheckout.on('brand', function(event) {\n        console.log('brand: ' + JSON.stringify(event));\n\n        var cardLogo = 'none';\n        if (event.brand && event.brand !== 'unknown') {\n          var filePath =\n            'https://cdn.na.bambora.com/downloads/images/cards/' +\n            event.brand +\n            '.svg';\n          cardLogo = 'url(' + filePath + ')';\n        }\n        document.getElementById('card-number').style.backgroundImage = cardLogo;\n      });\n\n      customCheckout.on('blur', function(event) {\n        console.log('blur: ' + JSON.stringify(event));\n      });\n\n      customCheckout.on('focus', function(event) {\n        console.log('focus: ' + JSON.stringify(event));\n      });\n\n      customCheckout.on('empty', function(event) {\n        console.log('empty: ' + JSON.stringify(event));\n\n        if (event.empty) {\n          if (event.field === 'card-number') {\n            isCardNumberComplete = false;\n          } else if (event.field === 'cvv') {\n            isCVVComplete = false;\n          } else if (event.field === 'expiry') {\n            isExpiryComplete = false;\n          }\n          self.setPayButton(false);\n        }\n      });\n\n      customCheckout.on('complete', function(event) {\n        console.log('complete: ' + JSON.stringify(event));\n\n        if (event.field === 'card-number') {\n          isCardNumberComplete = true;\n          self.hideErrorForId('card-number');\n        } else if (event.field === 'cvv') {\n          isCVVComplete = true;\n          self.hideErrorForId('card-cvv');\n        } else if (event.field === 'expiry') {\n          isExpiryComplete = true;\n          self.hideErrorForId('card-expiry');\n        }\n\n        self.setPayButton(\n          isCardNumberComplete && isCVVComplete && isExpiryComplete\n        );\n      });\n\n      customCheckout.on('error', function(event) {\n        console.log('error: ' + JSON.stringify(event));\n\n        if (event.field === 'card-number') {\n          isCardNumberComplete = false;\n          self.showErrorForId('card-number', event.message);\n        } else if (event.field === 'cvv') {\n          isCVVComplete = false;\n          self.showErrorForId('card-cvv', event.message);\n        } else if (event.field === 'expiry') {\n          isExpiryComplete = false;\n          self.showErrorForId('card-expiry', event.message);\n        }\n        self.setPayButton(false);\n      });\n    },\n    onSubmit: function(event) {\n      var self = this;\n\n      console.log('checkout.onSubmit()');\n\n      event.preventDefault();\n      self.setPayButton(false);\n      self.toggleProcessingScreen();\n\n      var callback = function(result) {\n        console.log('token result : ' + JSON.stringify(result));\n        debugger;\n        if (result.error) {\n          self.processTokenError(result.error);\n        } else {\n          self.processTokenSuccess(result.token);\n          K('field[Credit Card Token]').value(result[\"token\"]);\n          K('field[Credit Card Number]').value(\"...\"+result[\"last4\"]);\n          K('field[Credit Card Expiry Month]').value(result[\"expiryMonth\"]);\n          K('field[Credit Card Expiry Year]').value(result[\"expiryYear\"]);\n        }\n      };\n\n      console.log('checkout.createToken()');\n      customCheckout.createToken(callback);\n    },\n    hideErrorForId: function(id) {\n      console.log('hideErrorForId: ' + id);\n\n      var element = document.getElementById(id);\n\n      if (element !== null) {\n        var errorElement = document.getElementById(id + '-error');\n        if (errorElement !== null) {\n          errorElement.innerHTML = '';\n        }\n\n        var bootStrapParent = document.getElementById(id + '-bootstrap');\n        if (bootStrapParent !== null) {\n          bootStrapParent.className = 'form-group has-feedback has-success';\n        }\n      } else {\n        console.log('showErrorForId: Could not find ' + id);\n      }\n    },\n    showErrorForId: function(id, message) {\n      console.log('showErrorForId: ' + id + ' ' + message);\n\n      var element = document.getElementById(id);\n\n      if (element !== null) {\n        var errorElement = document.getElementById(id + '-error');\n        if (errorElement !== null) {\n          errorElement.innerHTML = message;\n        }\n\n        var bootStrapParent = document.getElementById(id + '-bootstrap');\n        if (bootStrapParent !== null) {\n          bootStrapParent.className = 'form-group has-feedback has-error ';\n        }\n      } else {\n        console.log('showErrorForId: Could not find ' + id);\n      }\n    },\n    setPayButton: function(enabled) {\n      console.log('checkout.setPayButton() disabled: ' + !enabled);\n\n      var payButton = document.getElementById('pay-button');\n      if (enabled) {\n        payButton.disabled = false;\n        payButton.className = 'btn btn-primary';\n      } else {\n        payButton.disabled = true;\n        payButton.className = 'btn btn-primary disabled';\n      }\n    },\n    toggleProcessingScreen: function() {\n      var processingScreen = document.getElementById('processing-screen');\n      if (processingScreen) {\n        processingScreen.classList.toggle('visible');\n      }\n    },\n    showErrorFeedback: function(message) {\n      var xMark = '\\u2718';\n      this.feedback = document.getElementById('feedback');\n      this.feedback.innerHTML = xMark + ' ' + message;\n      this.feedback.classList.add('error');\n    },\n    showSuccessFeedback: function(message) {\n      var checkMark = '\\u2714';\n      this.feedback = document.getElementById('feedback');\n      this.feedback.innerHTML = checkMark + ' ' + message;\n      this.feedback.classList.add('success');\n    },\n    processTokenError: function(error) {\n      error = JSON.stringify(error, undefined, 2);\n      console.log('processTokenError: ' + error);\n\n      this.showErrorFeedback(\n        'Error creating token: </br>' + JSON.stringify(error, null, 4)\n      );\n      this.setPayButton(true);\n      this.toggleProcessingScreen();\n    },\n    processTokenSuccess: function(token) {\n      console.log('processTokenSuccess: ' + token);\n\n      this.showSuccessFeedback('Success! Created token: ' + token);\n      this.setPayButton(true);\n      this.toggleProcessingScreen();\n\n      // Use token to call payments api\n      // this.makeTokenPayment(token);\n    },\n  };\n  customCheckoutController.init();\n},3000);\n\n",
          "runIf": "values('Member ID')!==\"\""
        },
        {
          "name": "Load Waiver",
          "type": "Load",
          "action": "Custom",
          "code": "K('bridgedResource[Get Waiver]').load({\n  success: function(bridgedData) {\n    debugger;\n    $(\"#waiverInformation\").html(bridgedData[0][\"Terms Information\"]);\n    $(\"#legalName\").text(K('space').attributes('School Legal Name'));\n    K('field[Waiver Information Text]').value($(\"#waiverInformation\").html());\n  }\n});",
          "runIf": "K('field[Waiver Information Text]').value()===null"
        },
        {
          "name": "Display Waiver",
          "type": "Load",
          "action": "Custom",
          "code": "$(\"#waiverInformation\").html(K('field[Waiver Information Text]').value());",
          "runIf": "K('field[Waiver Information Text]').value()!==null"
        },
        {
          "name": "Load States",
          "type": "Load",
          "action": "Custom",
          "code": "debugger\nvar stateValue=K('field[State]').value();\nvar states=K('space').attributes('School States').split(\",\");\nvar options=[];\nstates.forEach(state => {\n  options[options.length]={\n  \tlabel: state,\n    value: state\n  }\n});  \n\nK('field[State]').options(options);\ndebugger;\nif (form('review')) {\n\t  K('field[State]').value(stateValue);\n}"
        },
        {
          "name": "Set Country",
          "type": "Load",
          "action": "Custom",
          "code": "if (K('space').attributes('School Country Code')!==\"\" && K('space').attributes('School Country Code')!==null && K('space').attributes('School Country Code')!==undefined) {\n K('field[Country]').value(K('space').attributes('School Country Code'));\n}"
        },
        {
          "name": "Load from App",
          "type": "Load",
          "action": "Custom",
          "code": "K('bridgedResource[Get Member]').load({\n  attributes: ['Member ID', 'First Name', 'Last Name'],\n  values: {'ID' : 'Allen'},\n  success: function(bridgedData) {\n debugger;   \n    if (bridgedData===null) return;    \n    K('field[Member ID]').value(bridgedData['Member ID']);\n    K('field[Student First Name]').value(bridgedData['First Name']);\n    K('field[Student Last Name]').value(bridgedData['Last Name']);\n    K('field[DOB]').value(bridgedData['DOB']);\n    K('field[Address]').value(bridgedData['Address']);\n    K('field[Suburb]').value(bridgedData['Suburb']);\n    K('field[Postcode]').value(bridgedData['Postcode']);\n    K('field[State]').value(bridgedData['State']);\n    K('field[StatePlaceholder]').value(bridgedData['State']);\n    K('field[Mobile]').value(bridgedData['Phone Number']);\n    K('field[Email]').value(bridgedData['Email']);\n    \n    if (bridgedData['Billing Customer Reference']!==undefined && bridgedData['Billing Customer Reference']!==null && bridgedData['Billing Customer Reference']!==\"\") {\n\t\t      K('field[Billing Customer Reference]').value(bridgedData['Billing Customer Reference']);\n        \n          K('section[Completed Request]').show();      \t    \n          K('section[Family Members]').hide();      \n          K('section[Program Information]').hide();      \n          K('section[Accept Terms and Conditions]').hide();      \n          K('section[Billing Member Details]').hide();      \n          K('section[Payment Details]').hide();      \n          K('section[Credit Card Details]').hide();      \n          K('section[Card Error]').hide();      \n          K('section[Signatures]').hide();      \n       \t\tK('field[Send Type]').hide();             \n\t\t\t\t\tK('button[Submit]').hide();\n    }\n    \n/*    if (K('field[The first instalment is due on]').value()==null || K('field[The first instalment is due on]').value()==\"\") {\n\t    K('field[The first instalment is due on]').value(moment().format(\"YYYY-MM-DD\"));\n    }  \n*/    \n  }\n});",
          "runIf": "values('Member GUID')!==\"\" && !form('review')"
        },
        {
          "name": "Check for SMS",
          "type": "Load",
          "action": "Custom",
          "code": "debugger;\n  var settings = {\n    \"crossDomain\": true,\n    \"url\": K('field[Messages URL]').value()+\"/account_credit\",\n    \"method\": \"POST\",\n    \"headers\": {},\n    \"dataType\": \"json\",\n    \"contentType\": \"application/json\",\n    \"data\": JSON.stringify({\n        \"space\": K('space').slug(), \n    })\n  }\n\n  $.ajax(settings).done(function (response) {\n    debugger;\n    console.log(response);\n    if (response.error===100) {\n\t  \tK('field[Send Type]').element().forEach(elem => {$(elem).val()===\"SMS\" ? $(elem).prop(\"disabled\", true) : \"\" });  \n    } else {\n      if (response.data===0) {\n\t\t  \tK('field[Send Type]').element().forEach(elem => {$(elem).val()===\"SMS\" ? \t$(elem).prop(\"disabled\", true) : \"\" });  \n      }\n    }\n  }).fail(function (response) {\n  \tK('field[Send Type]').element().forEach(elem => {$(elem).val()===\"SMS\" ? $(elem).prop(\"disabled\", true) : \"\" });  \n  });\n"
        }
      ],
      "name": "Instalment Information",
      "renderType": "submittable",
      "type": "page"
    },
    {
      "advanceCondition": null,
      "displayCondition": null,
      "displayPage": null,
      "elements": [
        {
          "type": "content",
          "renderType": "html",
          "name": "GBLogo",
          "text": "<img src=\"https://gbfms-files.s3-ap-southeast-2.amazonaws.com/GB+Name+Log.png\" alt=\"GB Logo\" class=\"GBLogo\">",
          "visible": true,
          "renderAttributes": {
          }
        },
        {
          "type": "content",
          "renderType": "text",
          "name": "Thanks",
          "text": "Thank you for providing your waiver acceptance and billing details.",
          "visible": true,
          "renderAttributes": {
          }
        }
      ],
      "events": [

      ],
      "name": "Confirmation",
      "renderType": "confirmation",
      "type": "page"
    }
  ],
  "securityPolicies": [
    {
      "endpoint": "Display",
      "name": "Everyone"
    },
    {
      "endpoint": "Submission Access",
      "name": "Everyone"
    },
    {
      "endpoint": "Submission Modification",
      "name": "Everyone"
    }
  ],
  "slug": "bambora-remote-registration",
  "status": "Active",
  "submissionLabelExpression": "${values('Student First Name')} ${values('Student Last Name')} : ${values('The first instalment is due on')}",
  "type": "Service"
}